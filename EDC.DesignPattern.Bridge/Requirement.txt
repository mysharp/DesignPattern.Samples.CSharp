M公司开发部想要开发一个跨平台的图像浏览系统，要求该系统能够显示JPG、BMP、GIF、PNG等多种格式的文件，并且能够在Windows、Linux以及Unix等多个操作系统上运行。该系统首先将各种格式的文件解析为像素矩阵（Matrix），然后将像素矩阵显示在屏幕上，在不同的操作系统中可以调用不同的绘制函数来绘制像素矩阵。该系统需要具备较好的扩展性以支持新的文件格式和操作系统。


主要优点
　　分离抽象接口及其实现部分 -> 桥接模式使用“对象间的关联关系”解耦了抽象和实现之间固有的绑定关系，使得抽象和实现可以沿着各自的维度变化

　　取代多层继承方案 -> 极大地减少了子类的个数

　　提高了系统可扩展性 -> 在两个变化维度中任意扩展一个维度，都不需要修改原有系统，符合开闭原则

主要缺点
　　增加了系统的理解和设计难度 -> 需要开发者在一开始就对抽象层进行设计与编程

　　要求正确识别出系统中两个独立变化的维度 -> 如何正确地识别需要一定的经验积累

应用场景
　　一个类存在两个（或者多个）独立变化的维度，而且这两个（或者多个）维度都需要独立进行扩展。

　　不希望使用继承或因为多层继承而导致系统中类的个数急剧增加。

　　一个系统需要在抽象类和具体类之间增加更多的灵活性，避免在两个层次之间建立静态继承关系，通过桥接可以使它们在抽象层建立一个关联关系。