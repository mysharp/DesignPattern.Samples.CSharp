M公司想要开发一个用于多个软件的文件加密模块，该模块可以对文件中的数据进行加密并将加密后的数据存储在一个新文件中，具体的流程包括3个部分，分别是读取源文件、加密、保存加密之后的文件。其中，读取文件和保存文件使用流来实现，加密操作通过求模运算实现。这3个操作相对独立，为了实现代码地独立重用，让设计更加符合单一职责原则，这3个操作的业务代码封装在3个不同的类中。




主要优点
　　对客户端屏蔽了子系统组件，减少了客户端需要处理的对象数量并且使得子系统使用起来更加容易。

　　实现了子系统与客户端之间松耦合。

　　提供了一个访问子系统的统一入口，并不影响客户端直接使用子系统。

应用场景
　　想要为访问一系列复杂的子系统提供一个统一的简单入口 => 使用外观模式吧！

　　客户端与多个子系统之间存在很大的依赖性，引入外观类可以将子系统和客户端解耦

　　在层次化结构中，可以使用外观模式定义系统中每一层的入口，层与层之间不直接产生联系 => 通过外观类建立联系，降低层与层之间的耦合度！